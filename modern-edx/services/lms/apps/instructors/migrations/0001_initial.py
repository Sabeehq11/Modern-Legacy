# Generated by Django 4.2.7 on 2025-07-25 02:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InstructorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=2000)),
                ('expertise_areas', models.JSONField(blank=True, default=list)),
                ('years_of_experience', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('teaching_style', models.CharField(blank=True, choices=[('interactive', 'Interactive'), ('lecture', 'Lecture-based'), ('discussion', 'Discussion-based'), ('hands_on', 'Hands-on'), ('blended', 'Blended')], max_length=20)),
                ('languages_spoken', models.JSONField(blank=True, default=list)),
                ('office_hours', models.TextField(blank=True)),
                ('contact_preference', models.CharField(choices=[('email', 'Email'), ('message', 'Platform Message'), ('video_call', 'Video Call'), ('office_hours', 'Office Hours Only')], default='email', max_length=20)),
                ('current_institution', models.CharField(blank=True, max_length=200)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('auto_approve_enrollments', models.BooleanField(default=True)),
                ('allow_discussion_notifications', models.BooleanField(default=True)),
                ('public_profile', models.BooleanField(default=True)),
                ('total_students_taught', models.PositiveIntegerField(default=0)),
                ('average_course_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_courses_created', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instructor Profile',
                'verbose_name_plural': 'Instructor Profiles',
            },
        ),
        migrations.CreateModel(
            name='TeachingCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credential_type', models.CharField(choices=[('degree', 'Academic Degree'), ('certification', 'Professional Certification'), ('license', 'Teaching License'), ('award', 'Teaching Award'), ('training', 'Training Completion'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(blank=True, max_length=100)),
                ('issued_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=100)),
                ('credential_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='instructors.instructorprofile')),
            ],
            options={
                'verbose_name': 'Teaching Credential',
                'verbose_name_plural': 'Teaching Credentials',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='InstructorAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_login_hours', models.PositiveIntegerField(default=0)),
                ('avg_response_time_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('discussion_posts_count', models.PositiveIntegerField(default=0)),
                ('content_updates_count', models.PositiveIntegerField(default=0)),
                ('active_courses_count', models.PositiveIntegerField(default=0)),
                ('completed_courses_count', models.PositiveIntegerField(default=0)),
                ('total_video_hours_created', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('current_active_students', models.PositiveIntegerField(default=0)),
                ('student_completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('student_satisfaction_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('instructor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='instructors.instructorprofile')),
            ],
            options={
                'verbose_name': 'Instructor Analytics',
                'verbose_name_plural': 'Instructor Analytics',
            },
        ),
        migrations.CreateModel(
            name='InstructorRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('teaching_quality', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('responsiveness', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('course_organization', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True, max_length=1000)),
                ('would_recommend', models.BooleanField(default=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_ratings', to='courses.course')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='instructors.instructorprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Instructor Rating',
                'verbose_name_plural': 'Instructor Ratings',
                'ordering': ['-created_at'],
                'unique_together': {('instructor', 'student', 'course')},
            },
        ),
    ]
